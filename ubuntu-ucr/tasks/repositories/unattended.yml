---
- name: Enable unattended updates - distro.
  replace:
    path: "{{ unattended_file_path }}"
    regexp: '\/*(\s*)"\${distro_id}:\${distro_codename}-updates";'
    replace: '\1"${distro_id}:${distro_codename}-updates";'
  tags:
    - execution
    - repositories
    - unattended

- name: unitTest - enable unattended updates - distro.
  command: grep '"${distro_id}:${distro_codename}";' {{ unattended_file_path }}
  register: result
  failed_when: result.stdout == ''
  tags:
    - test
    - repositories
    - unattended

- name: Enable unattended updates - minimal steps.
  replace:
    path: "{{ unattended_file_path }}"
    regexp: '\/*Unattended-Upgrade::MinimalSteps (.*);'
    replace: 'Unattended-Upgrade::MinimalSteps "true";'
  tags:
    - execution
    - repositories
    - unattended

- name: unitTest - enable unattended updates - minimal steps.
  command: grep 'Unattended-Upgrade::MinimalSteps "true";' {{ unattended_file_path }}
  register: result
  failed_when: result.stdout == ''
  tags:
    - test
    - repositories
    - unattended

- name: Enable unattended updates - unused dependencies.
  replace:
    path: "{{ unattended_file_path }}"
    regexp: '\/*Unattended-Upgrade::Remove-Unused-Dependencies (.*);'
    replace: 'Unattended-Upgrade::Remove-Unused-Dependencies "true";'
  tags:
    - execution
    - repositories
    - unattended

- name: unitTest - enable unattended updates - unused dependencies.
  command: grep 'Unattended-Upgrade::Remove-Unused-Dependencies "true";' {{ unattended_file_path }}
  register: result
  failed_when: result.stdout == ''
  tags:
    - test
    - repositories
    - unattended
